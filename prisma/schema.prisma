generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  hashedPassword String
  firstName      String?
  lastName       String?
  role           Role      @default(USER)
  client         Client?
  employee       Employee?
}

model Client {
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String        @id
  reviews      Review[]
  appointments Appointment[]
}

model Employee {
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String         @id
  availibility Availability[]
  appointments Appointment[]
  services     Service[]
  reviews      Review[]
}

model Appointment {
  id         String    @id @default(cuid())
  title      String
  startTime  DateTime
  endTime    DateTime
  employee   Employee? @relation(fields: [employeeId], references: [userId], onDelete: SetNull)
  employeeId String?
  client     Client?   @relation(fields: [clientId], references: [userId], onDelete: SetNull)
  clientId   String?
  service    Service?  @relation(fields: [serviceId], references: [id], onDelete: SetNull)
  serviceId  String?
}

model Service {
  id          String          @id @default(cuid())
  title       String
  price       Int
  duration    Int
  category    ServiceCategory @default(Hair)
  employees   Employee[]
  appointment Appointment[]
  Review      Review[]
}

model Review {
  id        String   @id @default(cuid())
  content   String?
  rating    Int
  createdAt DateTime @default(now())

  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String
  client     Client   @relation(fields: [clientId], references: [userId], onDelete: SetDefault)
  clientId   String   @default("DELETED")
  employee   Employee @relation(fields: [employeeId], references: [userId], onDelete: SetDefault)
  employeeId String   @default("DELETED")

  @@unique([clientId, employeeId, serviceId])
}

model Availability {
  id         String    @id @default(cuid())
  day        Day
  fromTime   String
  untilTime  String
  isActive   Boolean   @default(true)
  employee   Employee? @relation(fields: [employeeId], references: [userId], onDelete: Cascade)
  employeeId String?
}

enum Role {
  ADMIN
  USER
  EMPLOYEE
}

enum ServiceCategory {
  Brows
  Lashes
  Hair
  Nails
}

enum Day {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}
